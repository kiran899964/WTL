package com.example.oldbooksellpurchase;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.List;

public class TextbookActivity extends AppCompatActivity {

    private static final String TAG = "TextbookActivity";
    private RecyclerView recyclerView;
    private BookAdapter bookAdapter;
    private DatabaseReference databaseReference;
    private List<Book> textbookList;
    private EditText searchBar;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_textbook);

        recyclerView = findViewById(R.id.recycler_view);
        searchBar = findViewById(R.id.search_bar);
        recyclerView.setLayoutManager(new GridLayoutManager(this, 2)); // 2 columns
        textbookList = new ArrayList<>();
        bookAdapter = new BookAdapter(textbookList);
        recyclerView.setAdapter(bookAdapter);

        databaseReference = FirebaseDatabase.getInstance().getReference("Books");

        fetchTextbooks();

        // Search bar listener to filter the RecyclerView
        searchBar.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                // Do nothing
            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                filter(s.toString());
            }

            @Override
            public void afterTextChanged(Editable s) {
                // Do nothing
            }
        });
    }

    private void fetchTextbooks() {
        databaseReference.orderByChild("category").equalTo("Textbooks")
                .addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                        textbookList.clear();
                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
                            Book book = snapshot.getValue(Book.class);
                            textbookList.add(book);
                        }
                        bookAdapter.notifyDataSetChanged();
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError databaseError) {
                        Log.e(TAG, "Failed to read data", databaseError.toException());
                        Toast.makeText(TextbookActivity.this, "Failed to load textbooks", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    private void filter(String text) {
        List<Book> filteredList = new ArrayList<>();
        for (Book item : textbookList) {
            if (item.getTitle().toLowerCase().contains(text.toLowerCase()) ||
                    item.getAuthor().toLowerCase().contains(text.toLowerCase())) {
                filteredList.add(item);
            }
        }

        bookAdapter.filterList(filteredList);
    }
}
 package com.example.oldbooksellpurchase;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.List;

public class BookAdapter extends RecyclerView.Adapter<BookAdapter.BookViewHolder> {

    private List<Book> bookList;

    public BookAdapter(List<Book> bookList) {
        this.bookList = bookList;
    }

    @NonNull
    @Override
    public BookViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_book, parent, false);
        return new BookViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull BookViewHolder holder, int position) {
        Book book = bookList.get(position);
        holder.titleTextView.setText(book.getTitle());
        holder.authorTextView.setText(book.getAuthor());
        holder.priceTextView.setText(book.getPrice());
    }

    @Override
    public int getItemCount() {
        return bookList.size();
    }

    public void filterList(List<Book> filteredList) {
        this.bookList = filteredList;
        notifyDataSetChanged();
    }

    public static class BookViewHolder extends RecyclerView.ViewHolder {
        TextView titleTextView;
        TextView authorTextView;
        TextView priceTextView;

        public BookViewHolder(View itemView) {
            super(itemView);
            titleTextView = itemView.findViewById(R.id.textView_title);
            authorTextView = itemView.findViewById(R.id.textView_author);
            priceTextView = itemView.findViewById(R.id.textView_price);
        }
    }
}
package com.example.oldbooksellpurchase;

public class Book {
    private String title;
    private String author;
    private String description;
    private String price;
    private String category;

    public Book() {
        // Default constructor required for calls to DataSnapshot.getValue(Book.class)
    }

    public Book(String title, String author, String description, String price, String category) {
        this.title = title;
        this.author = author;
        this.description = description;
        this.price = price;
        this.category = category;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public String getDescription() {
        return description;
    }

    public String getPrice() {
        return price;
    }

    public String getCategory() {
        return category;
    }
}
<?xml version="1.0" encoding="utf-8"?>
<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:card_view="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_margin="8dp"
    card_view:cardCornerRadius="8dp"
    card_view:cardElevation="4dp">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:padding="16dp">

        <TextView
            android:id="@+id/textView_title"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Book Title"
            android:textStyle="bold"
            android:textSize="18sp"
            android:textColor="@android:color/black" />

        <TextView
            android:id="@+id/textView_author"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Author Name"
            android:textSize="14sp"
            android:textColor="@android:color/darker_gray"
            android:layout_marginTop="4dp" />

        <TextView
            android:id="@+id/textView_price"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="$00.00"
            android:textStyle="bold"
            android:textSize="16sp"
            android:textColor="@android:color/holo_red_dark"
            android:layout_marginTop="8dp" />
    </LinearLayout>
</androidx.cardview.widget.CardView>
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".TextbookActivity">

    <EditText
        android:id="@+id/search_bar"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:hint="Search books"
        android:padding="12dp"
        android:background="@drawable/search_background"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="16dp" />

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recycler_view"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:padding="16dp"
        app:layout_constraintTop_toBottomOf="@id/search_bar"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:clipToPadding="false"
        android:scrollbars="vertical"/>

</androidx.constraintlayout.widget.ConstraintLayout>